#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: 编译x86_64 openwrt固件

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: 
        firmware:
          - x86_64
        include:
          - firmware: x86_64
            feeds_conf: feeds.conf.default
            config_file: x86_64.config
            diy_p1_sh: diy-part1.sh
            diy_p2_sh: diy-part2.sh

    steps:
    # - name: Before freeing up disk space
    #   run: |
    #     echo "Before freeing up disk space"
    #     echo "=============================================================================="
    #     df -hT
    #     echo "=============================================================================="

    # - name: "Optimize Disk Space"
    #   uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
    #   with:
    #     operate_sudo: "True"
    #     general_include: ".+"
    #     general_exclude: |-
    #       ^GCC$
    #       ^G\+\+$
    #       Clang
    #       LLVM
    #     docker_include: ".+"
    #     docker_prune: "True"
    #     docker_clean: "True"
    #     apt_prune: "True"
    #     apt_clean: "True"
    #     homebrew_prune: "True"
    #     homebrew_clean: "True"
    #     npm_prune: "True"
    #     npm_clean: "True"
    #     os_swap: "True"

    # - name: Freeing up disk space
    #   uses: easimon/maximize-build-space@master
    #   with: 
    #     root-reserve-mb: 2048
    #     swap-size-mb: 1
    #     remove-dotnet: 'true'
    #     remove-android: 'true'
    #     remove-haskell: 'true'
    #     remove-codeql: 'true'
    #     remove-docker-images: 'true'

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/graalvm /usr/local/.ghcup /usr/local/share/powershell /usr/local/share/chromium
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir

    - name: Clone source code
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e ${{ matrix.feeds_conf }} ] && mv ${{ matrix.feeds_conf }} openwrt/feeds.conf.default
        chmod +x ${{ matrix.diy_p1_sh }}
        cd openwrt
        $GITHUB_WORKSPACE/${{ matrix.diy_p1_sh }}
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e ${{ matrix.config_file }} ] && mv ${{ matrix.config_file }} openwrt/.config
        chmod +x ${{ matrix.diy_p2_sh }}
        cd openwrt
        $GITHUB_WORKSPACE/${{ matrix.diy_p2_sh }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >>$GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_${{ matrix.firmware }}_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt
        CONFIG_DIR=$PWD
        cd bin/targets/*/*
        rm -rf packages
        cp $CONFIG_DIR/.config defconfig
        ls | xargs -I {} mv {} firmware-${{ matrix.firmware }}-{}
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >>$GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ matrix.firmware }}_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

  release:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: download
        uses: actions/download-artifact@v4
        with:
          path: release
          pattern: OpenWrt_firmware_*
          merge-multiple: true

      - name: Generate release tag
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >>$GITHUB_OUTPUT
          touch release.txt
          echo "访问 http://tplogin.lan 进入界面" >> release.txt
          echo "用户名：root" >> release.txt
          echo "默认密码不用填，直接登录" >> release.txt
          echo "status=success" >>$GITHUB_OUTPUT

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: release/*

      - name: Delete workflow runs
        uses: fireh1974/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 5

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 8
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
